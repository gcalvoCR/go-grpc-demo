// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.2
// source: memes.proto

package memespb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MemeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"` // optional filter
}

func (x *MemeRequest) Reset() {
	*x = MemeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemeRequest) ProtoMessage() {}

func (x *MemeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_memes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemeRequest.ProtoReflect.Descriptor instead.
func (*MemeRequest) Descriptor() ([]byte, []int) {
	return file_memes_proto_rawDescGZIP(), []int{0}
}

func (x *MemeRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type MemeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Url      string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Category string `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *MemeResponse) Reset() {
	*x = MemeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemeResponse) ProtoMessage() {}

func (x *MemeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_memes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemeResponse.ProtoReflect.Descriptor instead.
func (*MemeResponse) Descriptor() ([]byte, []int) {
	return file_memes_proto_rawDescGZIP(), []int{1}
}

func (x *MemeResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MemeResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MemeResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MemeResponse) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type CategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *CategoryRequest) Reset() {
	*x = CategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryRequest) ProtoMessage() {}

func (x *CategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_memes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryRequest.ProtoReflect.Descriptor instead.
func (*CategoryRequest) Descriptor() ([]byte, []int) {
	return file_memes_proto_rawDescGZIP(), []int{2}
}

func (x *CategoryRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type MemeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memes []*MemeResponse `protobuf:"bytes,1,rep,name=memes,proto3" json:"memes,omitempty"`
}

func (x *MemeList) Reset() {
	*x = MemeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemeList) ProtoMessage() {}

func (x *MemeList) ProtoReflect() protoreflect.Message {
	mi := &file_memes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemeList.ProtoReflect.Descriptor instead.
func (*MemeList) Descriptor() ([]byte, []int) {
	return file_memes_proto_rawDescGZIP(), []int{3}
}

func (x *MemeList) GetMemes() []*MemeResponse {
	if x != nil {
		return x.Memes
	}
	return nil
}

type StreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_memes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_memes_proto_rawDescGZIP(), []int{4}
}

func (x *StreamRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type MemeUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title    string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Url      string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Category string `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *MemeUpload) Reset() {
	*x = MemeUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemeUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemeUpload) ProtoMessage() {}

func (x *MemeUpload) ProtoReflect() protoreflect.Message {
	mi := &file_memes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemeUpload.ProtoReflect.Descriptor instead.
func (*MemeUpload) Descriptor() ([]byte, []int) {
	return file_memes_proto_rawDescGZIP(), []int{5}
}

func (x *MemeUpload) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MemeUpload) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MemeUpload) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type UploadSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   int32  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UploadSummary) Reset() {
	*x = UploadSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSummary) ProtoMessage() {}

func (x *UploadSummary) ProtoReflect() protoreflect.Message {
	mi := &file_memes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSummary.ProtoReflect.Descriptor instead.
func (*UploadSummary) Descriptor() ([]byte, []int) {
	return file_memes_proto_rawDescGZIP(), []int{6}
}

func (x *UploadSummary) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UploadSummary) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_memes_proto protoreflect.FileDescriptor

var file_memes_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d,
	0x65, 0x6d, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22,
	0x62, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x22, 0x2d, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x22, 0x35, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x05, 0x6d, 0x65, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x65, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x05, 0x6d, 0x65, 0x6d, 0x65, 0x73, 0x22, 0x2b, 0x0a, 0x0d, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x50, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x3f, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xfc, 0x01, 0x0a, 0x0b, 0x4d, 0x65,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x65, 0x12, 0x12, 0x2e, 0x6d, 0x65, 0x6d,
	0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x6d, 0x65, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x65, 0x73, 0x42,
	0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x6d, 0x65, 0x6d, 0x65,
	0x73, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x65, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x65,
	0x73, 0x12, 0x14, 0x2e, 0x6d, 0x65, 0x6d, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x65, 0x6d, 0x65, 0x73, 0x2e,
	0x4d, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x38,
	0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x65, 0x73, 0x12, 0x11, 0x2e,
	0x6d, 0x65, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x1a, 0x14, 0x2e, 0x6d, 0x65, 0x6d, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x28, 0x01, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x63, 0x61, 0x6c, 0x76, 0x6f, 0x63, 0x72, 0x2f,
	0x67, 0x6f, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x6d, 0x65, 0x6d,
	0x65, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_memes_proto_rawDescOnce sync.Once
	file_memes_proto_rawDescData = file_memes_proto_rawDesc
)

func file_memes_proto_rawDescGZIP() []byte {
	file_memes_proto_rawDescOnce.Do(func() {
		file_memes_proto_rawDescData = protoimpl.X.CompressGZIP(file_memes_proto_rawDescData)
	})
	return file_memes_proto_rawDescData
}

var file_memes_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_memes_proto_goTypes = []interface{}{
	(*MemeRequest)(nil),     // 0: memes.MemeRequest
	(*MemeResponse)(nil),    // 1: memes.MemeResponse
	(*CategoryRequest)(nil), // 2: memes.CategoryRequest
	(*MemeList)(nil),        // 3: memes.MemeList
	(*StreamRequest)(nil),   // 4: memes.StreamRequest
	(*MemeUpload)(nil),      // 5: memes.MemeUpload
	(*UploadSummary)(nil),   // 6: memes.UploadSummary
}
var file_memes_proto_depIdxs = []int32{
	1, // 0: memes.MemeList.memes:type_name -> memes.MemeResponse
	0, // 1: memes.MemeService.GetRandomMeme:input_type -> memes.MemeRequest
	2, // 2: memes.MemeService.GetMemesByCategory:input_type -> memes.CategoryRequest
	4, // 3: memes.MemeService.StreamMemes:input_type -> memes.StreamRequest
	5, // 4: memes.MemeService.UploadMemes:input_type -> memes.MemeUpload
	1, // 5: memes.MemeService.GetRandomMeme:output_type -> memes.MemeResponse
	3, // 6: memes.MemeService.GetMemesByCategory:output_type -> memes.MemeList
	1, // 7: memes.MemeService.StreamMemes:output_type -> memes.MemeResponse
	6, // 8: memes.MemeService.UploadMemes:output_type -> memes.UploadSummary
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_memes_proto_init() }
func file_memes_proto_init() {
	if File_memes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_memes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemeUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_memes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_memes_proto_goTypes,
		DependencyIndexes: file_memes_proto_depIdxs,
		MessageInfos:      file_memes_proto_msgTypes,
	}.Build()
	File_memes_proto = out.File
	file_memes_proto_rawDesc = nil
	file_memes_proto_goTypes = nil
	file_memes_proto_depIdxs = nil
}
